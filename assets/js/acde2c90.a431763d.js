"use strict";(self.webpackChunknet_ray_docs=self.webpackChunknet_ray_docs||[]).push([[552],{8133:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"api-reference/serverevent","title":"API Reference - ServerEvent","description":"Returned by NetRay:RegisterEvent on the server. Handles server-side logic for unidirectional events.","source":"@site/docs/api-reference/serverevent.md","sourceDirName":"api-reference","slug":"/api-reference/serverevent","permalink":"/NetRay/docs/api-reference/serverevent","draft":false,"unlisted":false,"editUrl":"https://github.com/AstaWasTaken/NetRay/docs/api-reference/serverevent.md","tags":[],"version":"current","frontMatter":{"title":"API Reference - ServerEvent"},"sidebar":"docsSidebar","previous":{"title":"NetRay Module","permalink":"/NetRay/docs/api-reference/netray"},"next":{"title":"API Reference - ClientEvent","permalink":"/NetRay/docs/api-reference/clientevent"}}');var t=l(4848),i=l(8453);const a={title:"API Reference - ServerEvent"},d="API: ServerEvent",s={},c=[{value:"Methods",id:"methods",level:2},{value:"<code>:OnEvent(callback: function)</code>",id:"oneventcallback-function",level:3},{value:"<code>:FireClient(player: Player, data: any)</code>",id:"fireclientplayer-player-data-any",level:3},{value:"<code>:FireAllClients(data: any)</code>",id:"fireallclientsdata-any",level:3},{value:"<code>:FireAllClientsExcept(excludedPlayer: Player, data: any)</code>",id:"fireallclientsexceptexcludedplayer-player-data-any",level:3},{value:"<code>:FireFilteredClients(filterFn: function, data: any)</code>",id:"firefilteredclientsfilterfn-function-data-any",level:3},{value:"Properties (Internal)",id:"properties-internal",level:2}];function o(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api-serverevent",children:"API: ServerEvent"})}),"\n",(0,t.jsxs)(n.p,{children:["Returned by ",(0,t.jsx)(n.code,{children:"NetRay:RegisterEvent"})," on the server. Handles server-side logic for unidirectional events."]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"oneventcallback-function",children:(0,t.jsx)(n.code,{children:":OnEvent(callback: function)"})}),"\n",(0,t.jsxs)(n.p,{children:["Registers a handler function to be called when this specific event is received ",(0,t.jsx)(n.em,{children:"from"})," a client."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"callback(player: Player, data: any)"})}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"player"}),": The ",(0,t.jsx)(n.code,{children:"Player"})," instance who sent the event."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": The payload sent by the client (automatically type-checked if ",(0,t.jsx)(n.code,{children:"typeDefinition"})," was provided during registration)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local myEvent = NetRay:RegisterEvent("PlayerAction")\nmyEvent:OnEvent(function(player, data)\n    print(player.Name, "sent action:", data)\nend)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fireclientplayer-player-data-any",children:(0,t.jsx)(n.code,{children:":FireClient(player: Player, data: any)"})}),"\n",(0,t.jsxs)(n.p,{children:["Sends the event and associated ",(0,t.jsx)(n.code,{children:"data"})," payload to a single specific client."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"player"}),": The target ",(0,t.jsx)(n.code,{children:"Player"})," instance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": The data payload to send."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local targetPlayer = Players:FindFirstChild("Roblox")\nif targetPlayer then\n    myEvent:FireClient(targetPlayer, { message = "Hello!" })\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fireallclientsdata-any",children:(0,t.jsx)(n.code,{children:":FireAllClients(data: any)"})}),"\n",(0,t.jsxs)(n.p,{children:["Sends the event and ",(0,t.jsx)(n.code,{children:"data"})," payload to all currently connected clients. NetRay optimizes this using ",(0,t.jsx)(n.code,{children:"RemoteEvent:FireAllClients"})," internally when possible."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": The data payload to send."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'myEvent:FireAllClients({ announcement = "Server restarting soon!" })\n'})}),"\n",(0,t.jsx)(n.h3,{id:"fireallclientsexceptexcludedplayer-player-data-any",children:(0,t.jsx)(n.code,{children:":FireAllClientsExcept(excludedPlayer: Player, data: any)"})}),"\n",(0,t.jsxs)(n.p,{children:["Sends the event and ",(0,t.jsx)(n.code,{children:"data"})," payload to all connected clients ",(0,t.jsx)(n.em,{children:"except"})," the specified ",(0,t.jsx)(n.code,{children:"excludedPlayer"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"excludedPlayer"}),": The ",(0,t.jsx)(n.code,{children:"Player"})," instance to exclude."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": The data payload to send."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Example of using FireAllClientsExcept\nlocal myEvent = NetRay:RegisterEvent("GameAnnouncement", {\n    typeDefinition = { message = "string" }\n})\n\n-- Announce to all players except the winner\nlocal playerWhoWon = game.Players:FindFirstChild("Winner")\nif playerWhoWon then\n    myEvent:FireAllClientsExcept(playerWhoWon, { message = playerWhoWon.Name .. " won the round!" })\nend\n'})}),"\n",(0,t.jsx)(n.h3,{id:"firefilteredclientsfilterfn-function-data-any",children:(0,t.jsx)(n.code,{children:":FireFilteredClients(filterFn: function, data: any)"})}),"\n",(0,t.jsxs)(n.p,{children:["Sends the event and ",(0,t.jsx)(n.code,{children:"data"})," payload only to clients for whom the ",(0,t.jsx)(n.code,{children:"filterFn"})," function returns ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"filterFn(player: Player) -> boolean"})}),": A function that takes a player instance and returns ",(0,t.jsx)(n.code,{children:"true"})," if the event should be sent to them, ",(0,t.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"}),": The data payload to send."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'-- Send only to players on the "Red" team\nmyEvent:FireFilteredClients(function(plr)\n    return plr.Team and plr.Team.Name == "Red"\nend, { team_objective = "Capture Point B!" })\n'})}),"\n",(0,t.jsx)(n.h2,{id:"properties-internal",children:"Properties (Internal)"}),"\n",(0,t.jsxs)(n.p,{children:["While not typically accessed directly, a ",(0,t.jsx)(n.code,{children:"ServerEvent"})," instance holds references to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Name"}),": The event name string."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Options"}),": The options table passed during registration."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ServerManager"}),": The parent ",(0,t.jsx)(n.code,{children:"ServerManager"})," instance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RemoteEvent"}),": The underlying Roblox ",(0,t.jsx)(n.code,{children:"RemoteEvent"})," instance."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>d});var r=l(6540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);