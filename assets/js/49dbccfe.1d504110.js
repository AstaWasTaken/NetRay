"use strict";(self.webpackChunknet_ray_docs=self.webpackChunknet_ray_docs||[]).push([[737],{1483:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api-reference/clientevent","title":"API Reference - ClientEvent","description":"Returned by NetRayRegisterEvent on the client. Handles client-side logic for unidirectional events.","source":"@site/docs/api-reference/clientevent.md","sourceDirName":"api-reference","slug":"/api-reference/clientevent","permalink":"/NetRay/docs/api-reference/clientevent","draft":false,"unlisted":false,"editUrl":"https://github.com/AstaWasTaken/NetRay/docs/api-reference/clientevent.md","tags":[],"version":"current","frontMatter":{"title":"API Reference - ClientEvent"},"sidebar":"docsSidebar","previous":{"title":"API Reference - ServerEvent","permalink":"/NetRay/docs/api-reference/serverevent"},"next":{"title":"API Reference - RequestServer","permalink":"/NetRay/docs/api-reference/requestserver"}}');var i=t(4848),s=t(8453);const c={title:"API Reference - ClientEvent"},d="API: ClientEvent",l={},a=[{value:"Methods",id:"methods",level:2},{value:"<code>:OnEvent(callback: function)</code>",id:"oneventcallback-function",level:3},{value:"<code>:FireServer(data: any)</code>",id:"fireserverdata-any",level:3},{value:"Properties (Internal)",id:"properties-internal",level:2}];function o(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"api-clientevent",children:"API: ClientEvent"})}),"\n",(0,i.jsxs)(n.p,{children:["Returned by ",(0,i.jsx)(n.code,{children:"NetRay:GetEvent"})," or ",(0,i.jsx)(n.code,{children:"NetRay:RegisterEvent"})," on the client. Handles client-side logic for unidirectional events."]}),"\n",(0,i.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsx)(n.h3,{id:"oneventcallback-function",children:(0,i.jsx)(n.code,{children:":OnEvent(callback: function)"})}),"\n",(0,i.jsxs)(n.p,{children:["Registers a handler function to be called when this specific event is received ",(0,i.jsx)(n.em,{children:"from"})," the server. The processing order depends on the ",(0,i.jsx)(n.code,{children:"priority"})," set during the event's ",(0,i.jsx)(n.em,{children:"server-side"})," registration."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"callback(data: any)"})}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"}),": The payload sent by the server (automatically type-checked if ",(0,i.jsx)(n.code,{children:"typeDefinition"})," was provided during registration)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local serverMessageEvent = NetRay:GetEvent("ServerMessage")\r\nserverMessageEvent:OnEvent(function(data)\r\n    print("Message from server:", data.text)\r\n    -- Update UI.ShowNotification(data.text)\r\nend)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"fireserverdata-any",children:(0,i.jsx)(n.code,{children:":FireServer(data: any)"})}),"\n",(0,i.jsxs)(n.p,{children:["Sends the event and associated ",(0,i.jsx)(n.code,{children:"data"})," payload ",(0,i.jsx)(n.em,{children:"to"})," the server."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"data"}),": The data payload to send (will be type-checked against the server's ",(0,i.jsx)(n.code,{children:"typeDefinition"})," upon arrival if defined)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local playerInputEvent = NetRay:GetEvent("PlayerInput")\r\nlocal UserInputService = game:GetService("UserInputService")\r\n\r\nUserInputService.InputBegan:Connect(function(input, processed)\r\n    if processed then return end\r\n    if input.KeyCode == Enum.KeyCode.Space then\r\n        playerInputEvent:FireServer({ action = "Jump", pressTime = input.TimePosition })\r\n    end\r\nend)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"properties-internal",children:"Properties (Internal)"}),"\n",(0,i.jsxs)(n.p,{children:["While not typically accessed directly, a ",(0,i.jsx)(n.code,{children:"ClientEvent"})," instance holds references to:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Name"}),": The event name string."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Options"}),": The options table passed during registration (or defaults)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ClientManager"}),": The parent ",(0,i.jsx)(n.code,{children:"ClientManager"})," instance."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RemoteEvent"}),": The underlying Roblox ",(0,i.jsx)(n.code,{children:"RemoteEvent"})," instance."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var r=t(6540);const i={},s=r.createContext(i);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);